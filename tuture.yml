name: 从零开始用 Express + MongoDB 搭建图片分享网站
topics:
  - express
  - mongodb
  - docker
id: 69b697ed0cd9f890a636c9c78eb2ce0c
steps:
  - name: 初始化项目结构
    commit: f50be54
    diff:
      - file: .gitignore
      - file: package-lock.json
      - file: package.json
        display: true
        explain:
          pre: |-
            首先我们创建一个 npm 项目：

            ```bash
            $ npm init
            ```

            添加 express 的项目依赖：

            ```bash
            $ npm install express
            ```

            最终生成的 package.json 文件如下：
      - file: server.js
        display: true
        explain:
          pre: 然后编写服务器的入口文件 `server.js`，内容如下：
      - file: tuture.yml
    explain:
      post: >-
        通过 `node server.js` 运行 server.js 文件，然后在浏览器中访问
        [http://localhost:3000](http://localhost:3000)，便可以看到服务器的返回的 Hello World：
  - name: 配置中间件
    commit: f17c971
    diff:
      - file: package-lock.json
      - file: package.json
        display: true
      - file: server.js
        display: true
      - file: server/configure.js
        display: true
      - file: tuture.yml
  - name: 搭建路由和控制器
    commit: 5313abe
    diff:
      - file: controllers/home.js
        display: true
      - file: controllers/image.js
        display: true
      - file: server.js
        display: true
      - file: server/configure.js
        display: true
      - file: server/routes.js
        display: true
      - file: tuture.yml
    explain:
      post: >-
        到了这一步，我们运行服务器，打开浏览器访问
        [http://localhost:3000](http://localhost:3000)，可以看到 `The home:index
        controller` 的信息；访问
        [http://localhost:3000/test123](http://localhost:3000/test123)，则是 `The
        image:index controller test123`。进一步，我们还可以通过 Postman 或者 curl 等工具测试 POST
        方法的 controller 是否可用。下面以 curl 为例测试 `POST /images`：


        ```bash

        $ curl -X POST localhost:3000/images

        The image:create POST controller

        ```
  - name: 配置 handlebars 模板引擎
    commit: d56de92
    diff:
      - file: views/layouts/main.handlebars
        display: true
      - file: views/index.handlebars
        display: true
      - file: views/image.handlebars
        display: true
      - file: controllers/home.js
        display: true
      - file: controllers/image.js
        display: true
      - file: server/configure.js
        display: true
      - file: tuture.yml
  - name: 完善界面代码
    commit: 3b969d1
    diff:
      - file: tuture.yml
      - file: views/index.handlebars
        display: true
      - file: views/image.handlebars
        display: true
      - file: views/layouts/main.handlebars
        display: true
      - file: views/partials/comments.handlebars
        display: true
      - file: views/partials/popular.handlebars
        display: true
      - file: views/partials/stats.handlebars
        display: true
    explain:
      post: 注意在实际调整页面代码时，在修改并保存后只需刷新浏览器即可看到界面的变化（但是如果修改服务器代码则需要重新运行服务器）。
  - name: 将数据传入模板视图
    commit: eecc3e5
    diff:
      - file: controllers/home.js
        display: true
      - file: controllers/image.js
        display: true
      - file: package-lock.json
      - file: package.json
        display: true
      - file: server/configure.js
        display: true
      - file: tuture.yml
      - file: views/image.handlebars
        display: true
      - file: views/partials/comments.handlebars
        display: true
  - name: 实现图片上传功能
    commit: 3b592be
    diff:
      - file: controllers/image.js
        display: true
      - file: package-lock.json
      - file: package.json
        display: true
      - file: server/routes.js
        display: true
      - file: tuture.yml
description: 在这篇教程中，我们将用 Node.js 中最流行的 Express 框架搭建一个类似 Instagram 的图片分享社区，数据库选用 MongoDB。
